{"version":3,"sources":["actions/onSearch.js","components/Topbar/Searchbar.jsx","components/Topbar/Navbar.jsx","components/Data/HomeCard.tsx","components/Data/PvpTable.tsx","pages/home/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["token","Search","styled","_ref","theme","Object","defineProperty","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","&:hover","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","color","StyledInputBase","InputBase","_ref4","& .MuiInputBase-input","paddingLeft","concat","transition","transitions","create","&:focus","SearchBar","user","useContext","UserContext","onSearch","searchName","wrapUser","setUserProfile","name","realm","userProfile","options","method","url","replace","console","log","axios","request","then","response","data","catch","error","searchUser","_useState","useState","_useState2","slicedToArray","searchFieldVal","setSearchFieldVal","react_default","a","createElement","Searchbar_Search","Search_default","placeholder","inputProps","aria-label","onChange","newVal","target","value","onKeyDown","ev","key","preventDefault","Navbar","props","pendingRealm","Box","sx","flexGrow","AppBar","Toolbar","Typography","variant","noWrap","component","xs","sm","FormControl","size","InputLabel","id","Select","labelId","label","event","MenuItem","HomeCard","Card","maxWidth","border","borderColor","CardActionArea","CardMedia","image","imageName","alt","CardContent","gutterBottom","cardHeader","cardBody","PvpTable","react","TableContainer","BodyWrapper","paddingTop","Home","className","Container","Grid","container","rowSpacing","item","createTheme","primary","main","secondary","createContext","App","Provider","emotion_element_6a883da9_browser_esm","Button","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","content","src_App"],"mappings":"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","file":"static/js/main.a2f84d9a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst token = \"RoPlb1Y8T8L1WqNp8bnapfb1uccMyIae\";\n\n\nexport function searchUser(name,realm){\n    const options = {\n        method: 'GET',\n        url: ('https://us.api.blizzard.com/profile/wow/character/#realm/#name?namespace=profile-us&locale=en_US&access_token='+token).replace(\"#name\",name).replace(\"#realm\",realm),\n        // accept: '*/*', \n    };\n    console.log(\"START REQUEST\");\n    axios.request(options).then(function (response) {\n        console.log(response.data);\n    }).catch(function (error) {\n        console.error(error);\n    });\n    console.log(\"END REQUEST\");\n}\nexport function test(){\n    console.log(\"test\")\n}","import { styled, alpha } from '@mui/material/styles';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputBase from '@mui/material/InputBase';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useContext } from \"react\";\nimport { UserContext } from '../../App';\nimport { searchUser, test } from '../../actions/onSearch';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'primary'\n  }));\n  \nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '14ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n}));\n\nexport function SearchBar(){\n  const user = useContext(UserContext);\n\n  function onSearch(searchName){\n    //event.target.value\n    //Set Name Here\n    user.wrapUser.setUserProfile({name:searchName,realm:user.wrapUser.userProfile.realm})\n    if(searchName !== \"\" && user.wrapUser.userProfile.realm !== \"\" &&searchName !== \"Search…\"){\n        //Create alert telling to supply the info\n        searchUser(searchName,user.wrapUser.userProfile.realm);\n    }\n\n  }\n\n    const [searchFieldVal, setSearchFieldVal] = useState(\"Search…\");\n    return (<Search>\n            <SearchIconWrapper>\n                <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n                placeholder=\"Search…\"\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(newVal) => setSearchFieldVal(newVal.target.value)}\n                onKeyDown={(ev) => {\n                  if (ev.key === 'Enter') {\n                    // Do code here\n                    onSearch(searchFieldVal)\n                    ev.preventDefault();\n                  }\n                }}\n            />\n    </Search>);\n}","import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { SearchBar } from './Searchbar';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useContext } from \"react\";\nimport { UserContext } from '../../App';\n\n\n\nexport function Navbar(props) {\n  //Attributes\n  const user = useContext(UserContext);\n  var pendingRealm = \"\";\n\n  function handleChange(event){\n    //set realm here\n    pendingRealm=event.target.value;\n    user.wrapUser.setUserProfile({name:user.wrapUser.userProfile.name,realm:pendingRealm})\n    \n  }\n\n\n\n\n  return <Box sx={{ flexGrow: 1 }}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>\n          WoW Ranking\n        </Typography>\n        <FormControl sx={{display: {xs: 'none', sm: 'inline'}}}size='small' color='secondary'>\n        <InputLabel id=\"realm-select-label\">Realm</InputLabel>\n          <Select \n            sx={{ width:200}}\n            labelId=\"realm-select-label\"\n            id=\"realm-select\"\n            value={pendingRealm}\n            label=\"Realm\"\n            onChange={handleChange}\n          >\n            <MenuItem value={\"Sargeras\"}>Sargeras</MenuItem>\n            <MenuItem value={\"Stormreaver\"}>Stormreaver</MenuItem>\n            <MenuItem value={\"Illidian\"}>Illidian</MenuItem>\n          </Select>\n        </FormControl>\n\n        <SearchBar></SearchBar>\n      </Toolbar>\n    </AppBar>\n  </Box>\n}\n\n\n\n","import React from 'react';\n\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { UserContext } from '../../App';\nimport { useContext } from \"react\";\n\n\ninterface cardData{\n    cardHeader: string;\n    cardBody: string;\n    imageName: string;\n}\nexport function HomeCard(props: cardData ){\n\n    const user = useContext(UserContext);\n\n\n    return(<Card sx={{ maxWidth: 345, border: 3,borderColor:'green'  }}>\n            <CardActionArea>\n            <CardMedia\n                component=\"img\"\n                height=\"210\"\n                image= {props.imageName}\n                alt=\"Image Alt\"\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.cardHeader}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                {props.cardBody}\n                </Typography>\n            </CardContent></CardActionArea></Card>)\n}","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport function PvpTable(){\n    return(\n        <TableContainer></TableContainer>\n    );\n}","import React from 'react';\nimport { borderColor, Container } from '@mui/system';\nimport { Navbar } from '../../components/Topbar/Navbar';\nimport { Button, Grid} from '@mui/material';\nimport axios from 'axios';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport { HomeCard } from '../../components/Data/HomeCard';\nimport { PvpTable } from '../../components/Data/PvpTable';\n\nconst BodyWrapper = styled('div')(({ theme }) => ({\n    color: 'black',\n    height: '100%',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'start',\n    justifyContent: 'center',\n    paddingTop: '25',\n  }));\n\nexport function Home(){\n    //{type: 'ADD_NAME', name:'Slimwind'}\n\n    return(<div className=\"App\">\n    \n        <header className=\"App-header\">\n            <Navbar></Navbar>\n            </header>\n            <BodyWrapper>\n        <Container sx={{paddingTop: '25px'}}>\n        <Grid\n            container\n            spacing={3}\n            rowSpacing={1}>\n            <Grid item xs={12}>\n            <p>Azeroth Daily</p>\n            </Grid>\n            <Grid  item xs={4}>\n            <HomeCard cardHeader=\"Lizard\" imageName=\"logo512.png\"\n            cardBody=\"Lizards are a widespread group of squamate reptiles, with over 6,000\n                species, ranging across all continents except Antarctica\"></HomeCard>\n            </Grid>\n            <Grid  item xs={4}>\n            <HomeCard cardHeader=\"Lizard\" imageName=\"logo512.png\"\n            cardBody=\"Lizards are a widespread group of squamate reptiles, with over 6,000\n                species, ranging across all continents except Antarctica\"></HomeCard>\n\n            </Grid>\n            <Grid  item xs={4}>\n            <HomeCard cardHeader=\"Lizard\" imageName=\"logo512.png\"\n            cardBody=\"Lizards are a widespread group of squamate reptiles, with over 6,000\n                species, ranging across all continents except Antarctica\"></HomeCard>\n            </Grid>\n            <Grid item xs={12}>\n                <PvpTable></PvpTable>\n            </Grid>\n        </Grid>\n        </Container>\n    </BodyWrapper>\n    </div>);\n}\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { Home } from \"./pages/home/home\";\nimport { createContext } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#1a9e60\",\n    },\n    secondary:{\n      main: \"#fff\",\n    }\n  },\n});\n\nexport const UserContext = createContext();\n\nfunction App() {\n  // The actions can be serialized, logged or stored and later replayed.\n  const [userProfile,setUserProfile] = useState({name: \"\", realm:\"\",});\n  const wrapUser={userProfile,setUserProfile};//obj.wrapUser.userProfile.value\n\n\n\n  return (\n    <UserContext.Provider value={{wrapUser}}>\n        <ThemeProvider theme={theme}>\n          <Home></Home>\n          <Button sx={{borderRadius: 50}} variant=\"contained\" color=\"info\" onClick={() => console.log(\"BTN PRESS\")}>\n        Switch Language (Current: {userProfile.name} Current: {userProfile.realm})\n      </Button>\n        </ThemeProvider>\n    </UserContext.Provider>\n  );\n}\n//console.log(appStore.getState().name);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}